{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigator.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","auth","dbService","firestore","storageService","storage","firebaseInstance","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAcount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","catch","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweet","isOwner","editMode","setEditMode","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","imgUrl","event","update","toggleEdit","autoFocus","src","faPencilAlt","faTrash","NweetFactory","userObj","setNweet","nweetImg","setNweetImg","Boolean","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","creatorID","maxLength","htmlFor","faPlus","accept","theFile","files","fileReader","FileReader","onloadend","result","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","document","Profile","history","useHistory","displayName","setDisplayName","getMyNweets","where","orderBy","get","updateProfile","reloadUserObj","marginTop","signOut","push","Navigator","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9c79be1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\nexport const firebaseInstance = firebase;","import { authService } from \"myBase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAcount] = useState(false);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (e) => {\n        const { target: { name, value } } = e;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                //create account\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                );\n            } else {\n                //log in\n                data = await authService.signInWithEmailAndPassword(\n                    email, password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleSignInBtn = () => {\n        setNewAcount(prev => !prev);\n    }\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input className=\"authInput\" onChange={onChange} type=\"text\" placeholder=\"Email\" name=\"email\" required value={email} />\n                <input className=\"authInput\" onChange={onChange} type=\"password\" placeholder=\"Password\" name=\"password\" required value={password} />\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"create account\" : \"sign in\"} />\n                {error &&\n                    <span className=\"authError\">{error}</span>\n                }\n            </form>\n            <span className=\"authSwitch\" onClick={toggleSignInBtn} >{newAccount ? \"sign in\" : \"create account\"}</span>\n        </>\n    )\n}\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport React, { useState } from \"react\";\nimport { firebaseInstance, authService } from \"../myBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const [error, setError] = useState(\"\");\n\n    //social login\n    const onSocialClick = async (e) => {\n        const { target: { name } } = e;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        const authData = await authService.signInWithPopup(provider)\n            .catch(error => setError(error.message));\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button name=\"google\"\n                    onClick={onSocialClick}\n                    className=\"authBtn\">\n                    Continue with Google\n                    <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button\n                    name=\"github\"\n                    onClick={onSocialClick}\n                    className=\"authBtn\">\n                    Continue with Github\n                    <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth;\n","import React, { useState } from \"react\"\nimport { dbService, storageService } from \"myBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweet, isOwner }) => {\n    const [editMode, setEditMode] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweet.text);\n\n    const onDeleteClick = async () => {\n        const confirm = window.confirm(\"are you sure?\");\n        if (confirm) {\n            //delete nweet\n            await dbService.doc(`nweet/${nweet.id}`).delete();\n            //delete nweet related file\n            await storageService.refFromURL(nweet.imgUrl).delete();\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweet/${nweet.id}`).update({\n            text: newNweet\n        })\n        setEditMode(false);\n    }\n\n    const onChangeEdit = (event) => {\n        const { target: { value } } = event;\n        setNewNweet(value);\n    }\n\n    const toggleEdit = () => {\n        setEditMode(prev => !prev)\n    }\n\n    return (\n        <div className=\"nweet\">\n            {editMode ?\n                <>\n                    <form onSubmit={onSubmit}\n                        className=\"container nweetEdit\"\n                    >\n                        <input type=\"text\"\n                            value={newNweet}\n                            onChange={onChangeEdit}\n                            required\n                            autoFocus\n                            className=\"formInput\" />\n                        <input type=\"submit\"\n                            value=\"update\"\n                            className=\"formBtn\" />\n                        <button onClick={toggleEdit}\n                            className=\"formBtn cancelBtn\">\n                            cancel\n                        </button>\n                    </form>\n                </>\n                :\n                <>\n                    {nweet.imgUrl &&\n                        <img src={nweet.imgUrl} />\n                    }\n                    <h4> {nweet.text} </h4>\n                </>\n            }\n            {isOwner && (\n                <div className=\"nweet__actions\">\n                    <span onClick={toggleEdit}>\n                        <FontAwesomeIcon icon={faPencilAlt} />\n                    </span>\n                    <span onClick={onDeleteClick}>\n                        <FontAwesomeIcon icon={faTrash} />\n                    </span>\n                </div>\n            )\n            }\n\n        </div>\n    )\n}\n\nexport default Nweet;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"myBase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [nweetImg, setNweetImg] = useState(\"\");\n\n    const onChange = (e) => {\n        const { target: { value } } = e;\n        setNweet(value);\n    };\n\n    const onSubmit = async (e) => {\n        if (nweet === \"\") {\n            return;\n        }\n        e.preventDefault();\n\n        let imgUrl = \"\";\n        if (Boolean(nweetImg)) {\n            //upload image file up firestore under dir named user id\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\n            const response = await fileRef.putString(nweetImg, \"data_url\")\n            imgUrl = await response.ref.getDownloadURL();\n        }\n\n        const newDocument = await dbService.collection(\"nweet\").add(\n            {\n                text: nweet,\n                createdAt: new Date(),\n                creatorID: userObj.uid,\n                imgUrl\n            }\n        )\n        setNweet(\"\");\n        setNweetImg(\"\");\n    };\n\n    const onImageChange = (event) => {\n        const { target: { files } } = event;\n        const theFile = files[0];\n        const fileReader = new FileReader();\n\n        //add eventListener to fileReader\n        fileReader.onloadend = (event) => {\n            const { target: { result } } = event;\n            setNweetImg(result)\n        };\n\n        //read file as data url\n        fileReader.readAsDataURL(theFile);\n    }\n\n    return (\n        <form onSubmit={onSubmit}\n            className=\"factoryForm\"\n        >\n            <div className=\"factoryInput__container\">\n                <input value={nweet}\n                    onChange={onChange}\n                    placeholder=\"what's on your mind?\"\n                    maxLength={120}\n                    className=\"factoryInput__input\"\n                />\n                <input type=\"submit\"\n                    value=\"&rarr;\"\n                    className=\"factoryInput__arrow\" />\n            </div>\n\n            <label htmlFor=\"attach-file\"\n                className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input type=\"file\"\n                id=\"attach-file\"\n                accept=\"image/*\"\n                onChange={onImageChange}\n                style={{\n                    opacity: 0,\n                }} />\n\n            {nweetImg && (\n                <div className=\"factoryForm__attachment\">\n                    <img src={nweetImg}\n                        style={{\n                            backgroundImage: nweetImg,\n                        }} />\n                    <div className=\"factoryForm__clear\"\n                        onClick={() => setNweetImg(null)}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form >\n    )\n}\n\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"myBase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    const onSnapShot = () => {\n        dbService.collection(\"nweet\").onSnapshot((snapshot) => {\n            /* \n            TODO: update array with changes only instead of replacing the array with new array\n            */\n            const nweetArray = snapshot.docs.map((document) => ({\n                id: document.id,\n                ...document.data(),\n            }))\n            setNweets(nweetArray);\n        })\n    }\n\n    useEffect(() => {\n        onSnapShot();\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweet={nweet} isOwner={userObj.uid === nweet.creatorID} />\n                ))}\n            </div>\n        </div>\n    );\n}\nexport default Home;","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"myBase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj }) => {\n    const history = useHistory();\n    const onLogoutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    }\n\n    const [displayName, setDisplayName] = useState(userObj.displayName);\n\n    const onChangeDisplayName = (e) => {\n        const { target: { value } } = e;\n        setDisplayName(value);\n    };\n\n    const getMyNweets = async (e) => {\n        const myNweets = await dbService.collection(\"nweet\")\n            .where(\"creatorID\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n\n        myNweets.docs.map((doc) => {\n            console.log(doc.data());\n        })\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        /*\n         React uses shallow equality to check for changes to the state, \n         so mutating the state will not trigger re-rendering\n        */\n        if (displayName !== userObj.displayName) {\n            await userObj.updateProfile({\n                displayName: displayName,\n            })\n            userObj.reloadUserObj();\n        }\n\n    }\n\n    useEffect(() => {\n        getMyNweets()\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit}\n                className=\"profileForm\">\n                <input type=\"text\"\n                    value={displayName}\n                    onChange={onChangeDisplayName}\n                    className=\"formInput\"\n                    placeholder=\"display name\" />\n                <input type=\"submit\"\n                    value=\"update profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }} />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\"\n                onClick={onLogoutClick}>\n                Log Out\n            </span>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigator = ({ userObj }) => {\n    return <nav>\n        <ul style={{\n            display: \"flex\"\n            , justifyContent: \"center\"\n            , marginTop: 50\n        }}>\n            <li><Link\n                to=\"/\"\n                style={{ marginRight: 10 }}>\n                <FontAwesomeIcon\n                    icon={faTwitter}\n                    color={\"#04AAFF\"}\n                    size=\"2x\"\n                />\n            </Link>\n            </li>\n            <li><Link\n                to=\"/profile\"\n                style={{\n                    marginLeft: 10,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    fontSize: 12,\n                }}>\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                <span style={{ marginTop: 10 }}>\n                    {userObj.displayName\n                        ? `${userObj.displayName}의 Profile`\n                        : \"Profile\"}\n                </span>\n\n            </Link>\n            </li>\n        </ul>\n    </nav>\n}\n\nexport default Navigator;","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigator from \"components/Navigator\";\n\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigator userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} />\n                        </Route>\n                    </div>\n                ) : (\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'myBase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        /* force update userObj state */\n        user.reloadUserObj = async () => {\n          setUserObj(null);\n          setUserObj(() => authService.currentUser);\n        }\n      }\n      setUserObj(user);\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"initializing...\"}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}